//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EventsApp.Domain.Entities
{
    using System;
    using System.Collections.Generic;
    
    public partial class Event
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Event()
        {
            this.Users = new HashSet<User>();
            this.Agenda = new HashSet<Agendum>();
            this.AgendaSessions = new HashSet<AgendaSession>();
            this.AttendeeQuestions = new HashSet<AttendeeQuestion>();
            this.ClaimedVouchers = new HashSet<ClaimedVoucher>();
            this.EventAddresses = new HashSet<EventAddress>();
            this.EventCompanies = new HashSet<EventCompany>();
            this.EventNews = new HashSet<EventNew>();
            this.EventPersons = new HashSet<EventPerson>();
            this.SpeakerRatings = new HashSet<SpeakerRating>();
            this.EventUsers = new HashSet<EventUser>();
            this.InterestedAgendas = new HashSet<InterestedAgenda>();
            this.Notifications = new HashSet<Notification>();
            this.Packages = new HashSet<Package>();
            this.Photos = new HashSet<Photo>();
            this.Presentations = new HashSet<Presentation>();
            this.Surveys = new HashSet<Survey>();
            this.SurveyResults = new HashSet<SurveyResult>();
            this.UserSubscriptions = new HashSet<UserSubscription>();
        }
    
        public int Id { get; set; }
        public string NameEn { get; set; }
        public string NameAr { get; set; }
        public Nullable<System.DateTime> StartDate { get; set; }
        public Nullable<System.DateTime> EndDate { get; set; }
        public Nullable<int> EventTypeId { get; set; }
        public string BannerPhoto { get; set; }
        public string DescriptionEn { get; set; }
        public string DescriptionAr { get; set; }
        public bool HasSponsors { get; set; }
        public bool HasExhibitors { get; set; }
        public bool HasSpeaker { get; set; }
        public bool HasPartners { get; set; }
        public bool HasVIP { get; set; }
        public bool SponsorsOnlineRegister { get; set; }
        public bool ExhibitorsOnlineRegister { get; set; }
        public bool SpeakerOnlineRegister { get; set; }
        public bool PartnersOnlineRegister { get; set; }
        public bool VIPOnlineRegister { get; set; }
        public Nullable<System.DateTime> CreatedOn { get; set; }
        public Nullable<System.DateTime> LastModified { get; set; }
        public Nullable<System.DateTime> DeletedOn { get; set; }
        public Nullable<int> CreatedBy { get; set; }
        public Nullable<int> DeletedBy { get; set; }
        public Nullable<int> ModifiedBy { get; set; }
        public string BadgePhoto { get; set; }
        public string EventLogo { get; set; }
        public string VideoURL { get; set; }
        public string Video { get; set; }
        public string InstagramURL { get; set; }
        public string FacebookURL { get; set; }
        public string TwitterURL { get; set; }
        public string LinkedInURL { get; set; }
        public string ThemeURL { get; set; }
        public string UniqueId { get; set; }
        public Nullable<int> UserSubscriptionId { get; set; }
        public int ParticipantsLimit { get; set; }
        public Nullable<decimal> ParticipantFees { get; set; }
        public Nullable<bool> HasPayment { get; set; }
        public Nullable<int> BgImageId { get; set; }
        public string SelectedCurrency { get; set; }
        public Nullable<int> ParticipantsRegistrationTypeId { get; set; }
    
        public virtual User User { get; set; }
        public virtual User User1 { get; set; }
        public virtual User User2 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<User> Users { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Agendum> Agenda { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<AgendaSession> AgendaSessions { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<AttendeeQuestion> AttendeeQuestions { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ClaimedVoucher> ClaimedVouchers { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EventAddress> EventAddresses { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EventCompany> EventCompanies { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EventNew> EventNews { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EventPerson> EventPersons { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SpeakerRating> SpeakerRatings { get; set; }
        public virtual BackgroundTheme BackgroundTheme { get; set; }
        public virtual UserSubscription UserSubscription { get; set; }
        public virtual EventType EventType { get; set; }
        public virtual ParticipantsRegistrationType ParticipantsRegistrationType { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EventUser> EventUsers { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<InterestedAgenda> InterestedAgendas { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Notification> Notifications { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Package> Packages { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Photo> Photos { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Presentation> Presentations { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Survey> Surveys { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SurveyResult> SurveyResults { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<UserSubscription> UserSubscriptions { get; set; }
    }
}
