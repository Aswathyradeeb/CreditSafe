//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EventsApp.Domain.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class eventsappEntities : DbContext
    {
        public eventsappEntities()
            : base("name=eventsappEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<City> Cities { get; set; }
    
        public virtual int AddUserRole(Nullable<int> userId, Nullable<int> roleId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUserRole", userIdParameter, roleIdParameter);
        }
    
        [DbFunction("eventsappEntities", "fn_GetRegisteredUsers")]
        public virtual IQueryable<fn_GetRegisteredUsers_Result> fn_GetRegisteredUsers(Nullable<int> eventId, Nullable<int> userId, Nullable<int> roleId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetRegisteredUsers_Result>("[eventsappEntities].[fn_GetRegisteredUsers](@EventId, @userId, @roleId)", eventIdParameter, userIdParameter, roleIdParameter);
        }
    
        [DbFunction("eventsappEntities", "fn_GetSurveyResult")]
        public virtual IQueryable<fn_GetSurveyResult_Result> fn_GetSurveyResult(Nullable<int> eventId, Nullable<int> userId, Nullable<int> roleId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetSurveyResult_Result>("[eventsappEntities].[fn_GetSurveyResult](@EventId, @userId, @roleId)", eventIdParameter, userIdParameter, roleIdParameter);
        }
    
        [DbFunction("eventsappEntities", "fn_GetUsersAttendance")]
        public virtual IQueryable<fn_GetUsersAttendance_Result> fn_GetUsersAttendance(Nullable<int> eventId, Nullable<int> userId, Nullable<int> roleId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetUsersAttendance_Result>("[eventsappEntities].[fn_GetUsersAttendance](@EventId, @userId, @roleId)", eventIdParameter, userIdParameter, roleIdParameter);
        }
    
        public virtual int InsertBulkResponses()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertBulkResponses");
        }
    
        public virtual int InsertBulkUserforEvents()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertBulkUserforEvents");
        }
    
        public virtual ObjectResult<UserAttendHistory_Result> UserAttendHistory(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserAttendHistory_Result>("UserAttendHistory", userIdParameter);
        }
    }
}
